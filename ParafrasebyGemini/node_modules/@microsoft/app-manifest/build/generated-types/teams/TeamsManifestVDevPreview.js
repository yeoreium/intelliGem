"use strict";
// To parse this data:
//
//   import { Convert, TeamsManifestVDevPreview } from "./file";
//
//   const teamsManifestVDevPreview = Convert.toTeamsManifestVDevPreview(json);
//
// These functions will throw an error if the JSON doesn't
// match the expected interface, even if the JSON is valid.
Object.defineProperty(exports, "__esModule", { value: true });
exports.Convert = void 0;
// Converts JSON strings to/from your types
// and asserts the results of JSON.parse at runtime
class Convert {
    static toTeamsManifestVDevPreview(json) {
        return cast(JSON.parse(json), r("TeamsManifestVDevPreview"));
    }
    static teamsManifestVDevPreviewToJson(value) {
        return JSON.stringify(uncast(value, r("TeamsManifestVDevPreview")), null, 4);
    }
}
exports.Convert = Convert;
function invalidValue(typ, val, key, parent = '') {
    const prettyTyp = prettyTypeName(typ);
    const parentText = parent ? ` on ${parent}` : '';
    const keyText = key ? ` for key "${key}"` : '';
    throw Error(`Invalid value${keyText}${parentText}. Expected ${prettyTyp} but got ${JSON.stringify(val)}`);
}
function prettyTypeName(typ) {
    if (Array.isArray(typ)) {
        if (typ.length === 2 && typ[0] === undefined) {
            return `an optional ${prettyTypeName(typ[1])}`;
        }
        else {
            return `one of [${typ.map(a => { return prettyTypeName(a); }).join(", ")}]`;
        }
    }
    else if (typeof typ === "object" && typ.literal !== undefined) {
        return typ.literal;
    }
    else {
        return typeof typ;
    }
}
function jsonToJSProps(typ) {
    if (typ.jsonToJS === undefined) {
        const map = {};
        typ.props.forEach((p) => map[p.json] = { key: p.js, typ: p.typ });
        typ.jsonToJS = map;
    }
    return typ.jsonToJS;
}
function jsToJSONProps(typ) {
    if (typ.jsToJSON === undefined) {
        const map = {};
        typ.props.forEach((p) => map[p.js] = { key: p.json, typ: p.typ });
        typ.jsToJSON = map;
    }
    return typ.jsToJSON;
}
function transform(val, typ, getProps, key = '', parent = '') {
    function transformPrimitive(typ, val) {
        if (typeof typ === typeof val)
            return val;
        return invalidValue(typ, val, key, parent);
    }
    function transformUnion(typs, val) {
        // val must validate against one typ in typs
        const l = typs.length;
        for (let i = 0; i < l; i++) {
            const typ = typs[i];
            try {
                return transform(val, typ, getProps);
            }
            catch (_) { }
        }
        return invalidValue(typs, val, key, parent);
    }
    function transformEnum(cases, val) {
        if (cases.indexOf(val) !== -1)
            return val;
        return invalidValue(cases.map(a => { return l(a); }), val, key, parent);
    }
    function transformArray(typ, val) {
        // val must be an array with no invalid elements
        if (!Array.isArray(val))
            return invalidValue(l("array"), val, key, parent);
        return val.map(el => transform(el, typ, getProps));
    }
    function transformDate(val) {
        if (val === null) {
            return null;
        }
        const d = new Date(val);
        if (isNaN(d.valueOf())) {
            return invalidValue(l("Date"), val, key, parent);
        }
        return d;
    }
    function transformObject(props, additional, val) {
        if (val === null || typeof val !== "object" || Array.isArray(val)) {
            return invalidValue(l(ref || "object"), val, key, parent);
        }
        const result = {};
        Object.getOwnPropertyNames(props).forEach(key => {
            const prop = props[key];
            const v = Object.prototype.hasOwnProperty.call(val, key) ? val[key] : undefined;
            result[prop.key] = transform(v, prop.typ, getProps, key, ref);
        });
        Object.getOwnPropertyNames(val).forEach(key => {
            if (!Object.prototype.hasOwnProperty.call(props, key)) {
                result[key] = transform(val[key], additional, getProps, key, ref);
            }
        });
        return result;
    }
    if (typ === "any")
        return val;
    if (typ === null) {
        if (val === null)
            return val;
        return invalidValue(typ, val, key, parent);
    }
    if (typ === false)
        return invalidValue(typ, val, key, parent);
    let ref = undefined;
    while (typeof typ === "object" && typ.ref !== undefined) {
        ref = typ.ref;
        typ = typeMap[typ.ref];
    }
    if (Array.isArray(typ))
        return transformEnum(typ, val);
    if (typeof typ === "object") {
        return typ.hasOwnProperty("unionMembers") ? transformUnion(typ.unionMembers, val)
            : typ.hasOwnProperty("arrayItems") ? transformArray(typ.arrayItems, val)
                : typ.hasOwnProperty("props") ? transformObject(getProps(typ), typ.additional, val)
                    : invalidValue(typ, val, key, parent);
    }
    // Numbers can be parsed by Date but shouldn't be.
    if (typ === Date && typeof val !== "number")
        return transformDate(val);
    return transformPrimitive(typ, val);
}
function cast(val, typ) {
    return transform(val, typ, jsonToJSProps);
}
function uncast(val, typ) {
    return transform(val, typ, jsToJSONProps);
}
function l(typ) {
    return { literal: typ };
}
function a(typ) {
    return { arrayItems: typ };
}
function u(...typs) {
    return { unionMembers: typs };
}
function o(props, additional) {
    return { props, additional };
}
function m(additional) {
    return { props: [], additional };
}
function r(name) {
    return { ref: name };
}
const typeMap = {
    "TeamsManifestVDevPreview": o([
        { json: "$schema", js: "$schema", typ: u(undefined, "") },
        { json: "manifestVersion", js: "manifestVersion", typ: r("ManifestVersion") },
        { json: "version", js: "version", typ: "" },
        { json: "id", js: "id", typ: "" },
        { json: "packageName", js: "packageName", typ: u(undefined, "") },
        { json: "localizationInfo", js: "localizationInfo", typ: u(undefined, r("LocalizationInfo")) },
        { json: "developer", js: "developer", typ: r("Developer") },
        { json: "name", js: "name", typ: r("NameClass") },
        { json: "description", js: "description", typ: r("Description") },
        { json: "icons", js: "icons", typ: r("Icons") },
        { json: "accentColor", js: "accentColor", typ: "" },
        { json: "configurableTabs", js: "configurableTabs", typ: u(undefined, a(r("ConfigurableTab"))) },
        { json: "staticTabs", js: "staticTabs", typ: u(undefined, a(r("StaticTab"))) },
        { json: "bots", js: "bots", typ: u(undefined, a(r("Bot"))) },
        { json: "connectors", js: "connectors", typ: u(undefined, a(r("Connector"))) },
        { json: "subscriptionOffer", js: "subscriptionOffer", typ: u(undefined, r("SubscriptionOffer")) },
        { json: "composeExtensions", js: "composeExtensions", typ: u(undefined, a(r("ComposeExtension"))) },
        { json: "scopeConstraints", js: "scopeConstraints", typ: u(undefined, r("ScopeConstraints")) },
        { json: "permissions", js: "permissions", typ: u(undefined, a(r("Permission"))) },
        { json: "devicePermissions", js: "devicePermissions", typ: u(undefined, a(r("DevicePermission"))) },
        { json: "validDomains", js: "validDomains", typ: u(undefined, a("")) },
        { json: "webApplicationInfo", js: "webApplicationInfo", typ: u(undefined, r("WebApplicationInfo")) },
        { json: "graphConnector", js: "graphConnector", typ: u(undefined, r("GraphConnector")) },
        { json: "showLoadingIndicator", js: "showLoadingIndicator", typ: u(undefined, true) },
        { json: "isFullScreen", js: "isFullScreen", typ: u(undefined, true) },
        { json: "activities", js: "activities", typ: u(undefined, r("Activities")) },
        { json: "supportedChannelTypes", js: "supportedChannelTypes", typ: u(undefined, a(r("SupportedChannelType"))) },
        { json: "configurableProperties", js: "configurableProperties", typ: u(undefined, a(r("ConfigurableProperty"))) },
        { json: "defaultBlockUntilAdminAction", js: "defaultBlockUntilAdminAction", typ: u(undefined, true) },
        { json: "publisherDocsUrl", js: "publisherDocsUrl", typ: u(undefined, "") },
        { json: "defaultInstallScope", js: "defaultInstallScope", typ: u(undefined, r("DefaultInstallScope")) },
        { json: "defaultGroupCapability", js: "defaultGroupCapability", typ: u(undefined, r("DefaultGroupCapability")) },
        { json: "meetingExtensionDefinition", js: "meetingExtensionDefinition", typ: u(undefined, r("MeetingExtensionDefinition")) },
        { json: "authorization", js: "authorization", typ: u(undefined, r("TeamsManifestVDevPreviewAuthorization")) },
        { json: "extensions", js: "extensions", typ: u(undefined, a(r("ElementExtension"))) },
        { json: "actions", js: "actions", typ: u(undefined, a(r("ElementAction"))) },
        { json: "dashboardCards", js: "dashboardCards", typ: u(undefined, a(r("DashboardCard"))) },
        { json: "intuneInfo", js: "intuneInfo", typ: u(undefined, r("IntuneInfo")) },
        { json: "copilotAgents", js: "copilotAgents", typ: u(undefined, r("CopilotAgents")) },
        { json: "elementRelationshipSet", js: "elementRelationshipSet", typ: u(undefined, r("ElementRelationshipSet")) },
        { json: "backgroundLoadConfiguration", js: "backgroundLoadConfiguration", typ: u(undefined, r("BackgroundLoadConfiguration")) },
    ], false),
    "ElementAction": o([
        { json: "id", js: "id", typ: "" },
        { json: "intent", js: "intent", typ: r("Intent") },
        { json: "displayName", js: "displayName", typ: "" },
        { json: "description", js: "description", typ: "" },
        { json: "icons", js: "icons", typ: u(undefined, a(r("Icon"))) },
        { json: "handlers", js: "handlers", typ: a(r("Handler")) },
    ], false),
    "Handler": o([
        { json: "type", js: "type", typ: r("HandlerType") },
        { json: "supportedObjects", js: "supportedObjects", typ: u(undefined, r("SupportedObjects")) },
        { json: "supportsMultiSelect", js: "supportsMultiSelect", typ: u(undefined, true) },
        { json: "pageInfo", js: "pageInfo", typ: u(undefined, r("PageInfo")) },
        { json: "dialogInfo", js: "dialogInfo", typ: u(undefined, r("DialogInfo")) },
        { json: "url", js: "url", typ: u(undefined, "") },
        { json: "botInfo", js: "botInfo", typ: u(undefined, r("BotInfo")) },
    ], "any"),
    "BotInfo": o([
        { json: "botId", js: "botId", typ: "" },
        { json: "fetchTask", js: "fetchTask", typ: u(undefined, true) },
    ], "any"),
    "DialogInfo": o([
        { json: "dialogType", js: "dialogType", typ: r("DialogType") },
        { json: "url", js: "url", typ: u(undefined, "") },
        { json: "width", js: "width", typ: "" },
        { json: "height", js: "height", typ: "" },
        { json: "parameters", js: "parameters", typ: u(undefined, a(r("ParameterObject"))) },
        { json: "title", js: "title", typ: u(undefined, "") },
    ], "any"),
    "ParameterObject": o([
        { json: "name", js: "name", typ: "" },
        { json: "title", js: "title", typ: "" },
        { json: "description", js: "description", typ: "" },
        { json: "inputType", js: "inputType", typ: "" },
    ], "any"),
    "PageInfo": o([
        { json: "pageId", js: "pageId", typ: "" },
        { json: "subpageId", js: "subpageId", typ: u(undefined, "") },
    ], "any"),
    "SupportedObjects": o([
        { json: "file", js: "file", typ: u(undefined, r("File")) },
        { json: "folder", js: "folder", typ: u(undefined, u(m("any"), null)) },
    ], "any"),
    "File": o([
        { json: "extensions", js: "extensions", typ: u(undefined, a("")) },
    ], false),
    "Icon": o([
        { json: "size", js: "size", typ: 3.14 },
        { json: "url", js: "url", typ: "" },
    ], false),
    "Activities": o([
        { json: "activityTypes", js: "activityTypes", typ: u(undefined, a(r("ActivityType"))) },
        { json: "activityIcons", js: "activityIcons", typ: u(undefined, a(r("ActivityIcon"))) },
    ], false),
    "ActivityIcon": o([
        { json: "id", js: "id", typ: "" },
        { json: "iconFile", js: "iconFile", typ: "" },
    ], false),
    "ActivityType": o([
        { json: "type", js: "type", typ: "" },
        { json: "description", js: "description", typ: "" },
        { json: "templateText", js: "templateText", typ: "" },
        { json: "allowedIconIds", js: "allowedIconIds", typ: u(undefined, a("")) },
    ], false),
    "TeamsManifestVDevPreviewAuthorization": o([
        { json: "permissions", js: "permissions", typ: u(undefined, r("Permissions")) },
    ], false),
    "Permissions": o([
        { json: "resourceSpecific", js: "resourceSpecific", typ: u(undefined, a(r("ResourceSpecific"))) },
    ], false),
    "ResourceSpecific": o([
        { json: "name", js: "name", typ: "" },
        { json: "type", js: "type", typ: r("ResourceSpecificType") },
    ], false),
    "BackgroundLoadConfiguration": o([
        { json: "tabConfiguration", js: "tabConfiguration", typ: u(undefined, r("TabConfiguration")) },
    ], false),
    "TabConfiguration": o([
        { json: "contentUrl", js: "contentUrl", typ: "" },
    ], false),
    "Bot": o([
        { json: "botId", js: "botId", typ: "" },
        { json: "configuration", js: "configuration", typ: u(undefined, r("Configuration")) },
        { json: "needsChannelSelector", js: "needsChannelSelector", typ: u(undefined, true) },
        { json: "isNotificationOnly", js: "isNotificationOnly", typ: u(undefined, true) },
        { json: "requiresSecurityEnabledGroup", js: "requiresSecurityEnabledGroup", typ: u(undefined, true) },
        { json: "supportsFiles", js: "supportsFiles", typ: u(undefined, true) },
        { json: "supportsCalling", js: "supportsCalling", typ: u(undefined, true) },
        { json: "supportsVideo", js: "supportsVideo", typ: u(undefined, true) },
        { json: "scopes", js: "scopes", typ: a(r("CommandListScope")) },
        { json: "commandLists", js: "commandLists", typ: u(undefined, a(r("CommandList"))) },
        { json: "requirementSet", js: "requirementSet", typ: u(undefined, r("ElementRequirementSet")) },
    ], false),
    "CommandList": o([
        { json: "scopes", js: "scopes", typ: a(r("CommandListScope")) },
        { json: "commands", js: "commands", typ: a(r("CommandListCommand")) },
    ], false),
    "CommandListCommand": o([
        { json: "title", js: "title", typ: "" },
        { json: "description", js: "description", typ: "" },
    ], false),
    "Configuration": o([
        { json: "team", js: "team", typ: u(undefined, r("ConfigurationTeam")) },
        { json: "groupChat", js: "groupChat", typ: u(undefined, r("ConfigurationGroupChat")) },
    ], false),
    "ConfigurationGroupChat": o([
        { json: "fetchTask", js: "fetchTask", typ: u(undefined, true) },
        { json: "taskInfo", js: "taskInfo", typ: u(undefined, r("TaskInfo")) },
    ], false),
    "TaskInfo": o([
        { json: "title", js: "title", typ: u(undefined, "") },
        { json: "width", js: "width", typ: u(undefined, "") },
        { json: "height", js: "height", typ: u(undefined, "") },
        { json: "url", js: "url", typ: u(undefined, "") },
    ], false),
    "ConfigurationTeam": o([
        { json: "fetchTask", js: "fetchTask", typ: u(undefined, true) },
        { json: "taskInfo", js: "taskInfo", typ: u(undefined, r("TaskInfo")) },
    ], false),
    "ElementRequirementSet": o([
        { json: "hostMustSupportFunctionalities", js: "hostMustSupportFunctionalities", typ: a(r("HostFunctionality")) },
    ], false),
    "HostFunctionality": o([
        { json: "name", js: "name", typ: r("HostMustSupportFunctionalityName") },
    ], false),
    "ComposeExtension": o([
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "botId", js: "botId", typ: u(undefined, "") },
        { json: "composeExtensionType", js: "composeExtensionType", typ: u(undefined, r("ComposeExtensionType")) },
        { json: "authorization", js: "authorization", typ: u(undefined, r("ComposeExtensionAuthorization")) },
        { json: "apiSpecificationFile", js: "apiSpecificationFile", typ: u(undefined, "") },
        { json: "canUpdateConfiguration", js: "canUpdateConfiguration", typ: u(undefined, u(true, null)) },
        { json: "commands", js: "commands", typ: u(undefined, a(r("ComposeExtensionCommand"))) },
        { json: "messageHandlers", js: "messageHandlers", typ: u(undefined, a(r("MessageHandler"))) },
        { json: "requirementSet", js: "requirementSet", typ: u(undefined, r("ElementRequirementSet")) },
    ], false),
    "ComposeExtensionAuthorization": o([
        { json: "authType", js: "authType", typ: u(undefined, r("AuthType")) },
        { json: "microsoftEntraConfiguration", js: "microsoftEntraConfiguration", typ: u(undefined, r("MicrosoftEntraConfiguration")) },
        { json: "apiSecretServiceAuthConfiguration", js: "apiSecretServiceAuthConfiguration", typ: u(undefined, r("APISecretServiceAuthConfiguration")) },
        { json: "oAuthConfiguration", js: "oAuthConfiguration", typ: u(undefined, r("OAuthConfiguration")) },
    ], false),
    "APISecretServiceAuthConfiguration": o([
        { json: "apiSecretRegistrationId", js: "apiSecretRegistrationId", typ: u(undefined, "") },
    ], false),
    "MicrosoftEntraConfiguration": o([
        { json: "supportsSingleSignOn", js: "supportsSingleSignOn", typ: u(undefined, true) },
    ], false),
    "OAuthConfiguration": o([
        { json: "oAuthConfigurationId", js: "oAuthConfigurationId", typ: u(undefined, "") },
    ], false),
    "ComposeExtensionCommand": o([
        { json: "id", js: "id", typ: "" },
        { json: "type", js: "type", typ: u(undefined, r("CommandType")) },
        { json: "samplePrompts", js: "samplePrompts", typ: u(undefined, a(r("SamplePrompt"))) },
        { json: "apiResponseRenderingTemplateFile", js: "apiResponseRenderingTemplateFile", typ: u(undefined, "") },
        { json: "context", js: "context", typ: u(undefined, a(r("CommandContext"))) },
        { json: "title", js: "title", typ: "" },
        { json: "description", js: "description", typ: u(undefined, "") },
        { json: "initialRun", js: "initialRun", typ: u(undefined, true) },
        { json: "fetchTask", js: "fetchTask", typ: u(undefined, true) },
        { json: "parameters", js: "parameters", typ: u(undefined, a(r("ParameterClass"))) },
        { json: "taskInfo", js: "taskInfo", typ: u(undefined, r("TaskInfo")) },
        { json: "semanticDescription", js: "semanticDescription", typ: u(undefined, "") },
    ], false),
    "ParameterClass": o([
        { json: "name", js: "name", typ: "" },
        { json: "inputType", js: "inputType", typ: u(undefined, r("InputType")) },
        { json: "isRequired", js: "isRequired", typ: u(undefined, true) },
        { json: "title", js: "title", typ: "" },
        { json: "description", js: "description", typ: u(undefined, "") },
        { json: "value", js: "value", typ: u(undefined, "") },
        { json: "choices", js: "choices", typ: u(undefined, a(r("Choice"))) },
        { json: "semanticDescription", js: "semanticDescription", typ: u(undefined, "") },
    ], false),
    "Choice": o([
        { json: "title", js: "title", typ: "" },
        { json: "value", js: "value", typ: "" },
    ], false),
    "SamplePrompt": o([
        { json: "text", js: "text", typ: "" },
    ], false),
    "MessageHandler": o([
        { json: "type", js: "type", typ: r("MessageHandlerType") },
        { json: "value", js: "value", typ: r("Value") },
    ], false),
    "Value": o([
        { json: "domains", js: "domains", typ: u(undefined, a("")) },
        { json: "supportsAnonymousAccess", js: "supportsAnonymousAccess", typ: u(undefined, true) },
        { json: "supportsAnonymizedPayloads", js: "supportsAnonymizedPayloads", typ: u(undefined, true) },
    ], "any"),
    "ConfigurableTab": o([
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "configurationUrl", js: "configurationUrl", typ: "" },
        { json: "canUpdateConfiguration", js: "canUpdateConfiguration", typ: u(undefined, true) },
        { json: "scopes", js: "scopes", typ: a(r("ConfigurableTabScope")) },
        { json: "meetingSurfaces", js: "meetingSurfaces", typ: u(undefined, a(r("MeetingSurface"))) },
        { json: "context", js: "context", typ: u(undefined, a(r("ConfigurableTabContext"))) },
        { json: "supportedPlatform", js: "supportedPlatform", typ: u(undefined, a(r("SupportedPlatform"))) },
        { json: "sharePointPreviewImage", js: "sharePointPreviewImage", typ: u(undefined, "") },
        { json: "supportedSharePointHosts", js: "supportedSharePointHosts", typ: u(undefined, a(r("SupportedSharePointHost"))) },
    ], false),
    "Connector": o([
        { json: "connectorId", js: "connectorId", typ: "" },
        { json: "configurationUrl", js: "configurationUrl", typ: u(undefined, "") },
        { json: "scopes", js: "scopes", typ: a(r("ConnectorScope")) },
    ], false),
    "CopilotAgents": o([
        { json: "declarativeAgents", js: "declarativeAgents", typ: u(undefined, a(r("DeclarativeAgentRef"))) },
        { json: "customEngineAgents", js: "customEngineAgents", typ: u(undefined, a(r("CustomEngineAgent"))) },
    ], false),
    "CustomEngineAgent": o([
        { json: "id", js: "id", typ: "" },
        { json: "type", js: "type", typ: r("SourceTypeEnum") },
    ], false),
    "DeclarativeAgentRef": o([
        { json: "id", js: "id", typ: "" },
        { json: "file", js: "file", typ: "" },
    ], false),
    "DashboardCard": o([
        { json: "id", js: "id", typ: "" },
        { json: "displayName", js: "displayName", typ: "" },
        { json: "description", js: "description", typ: "" },
        { json: "pickerGroupId", js: "pickerGroupId", typ: "" },
        { json: "icon", js: "icon", typ: u(undefined, r("DashboardCardIcon")) },
        { json: "contentSource", js: "contentSource", typ: r("DashboardCardContentSource") },
        { json: "defaultSize", js: "defaultSize", typ: r("DefaultSize") },
    ], false),
    "DashboardCardContentSource": o([
        { json: "sourceType", js: "sourceType", typ: u(undefined, r("SourceTypeEnum")) },
        { json: "botConfiguration", js: "botConfiguration", typ: u(undefined, r("BotConfiguration")) },
    ], false),
    "BotConfiguration": o([
        { json: "botId", js: "botId", typ: u(undefined, "") },
    ], false),
    "DashboardCardIcon": o([
        { json: "iconUrl", js: "iconUrl", typ: u(undefined, "") },
        { json: "officeUIFabricIconName", js: "officeUIFabricIconName", typ: u(undefined, "") },
    ], false),
    "DefaultGroupCapability": o([
        { json: "team", js: "team", typ: u(undefined, r("Groupchat")) },
        { json: "groupchat", js: "groupchat", typ: u(undefined, r("Groupchat")) },
        { json: "meetings", js: "meetings", typ: u(undefined, r("Groupchat")) },
    ], false),
    "Description": o([
        { json: "short", js: "short", typ: "" },
        { json: "full", js: "full", typ: "" },
    ], false),
    "Developer": o([
        { json: "name", js: "name", typ: "" },
        { json: "mpnId", js: "mpnId", typ: u(undefined, "") },
        { json: "websiteUrl", js: "websiteUrl", typ: "" },
        { json: "privacyUrl", js: "privacyUrl", typ: "" },
        { json: "termsOfUseUrl", js: "termsOfUseUrl", typ: "" },
        { json: "contactInfo", js: "contactInfo", typ: u(undefined, r("ContactInfo")) },
    ], false),
    "ContactInfo": o([
        { json: "defaultSupport", js: "defaultSupport", typ: r("DefaultSupport") },
    ], "any"),
    "DefaultSupport": o([
        { json: "userEmailsForChatSupport", js: "userEmailsForChatSupport", typ: a("") },
        { json: "emailsForEmailSupport", js: "emailsForEmailSupport", typ: a("") },
    ], "any"),
    "ElementRelationshipSet": o([
        { json: "oneWayDependencies", js: "oneWayDependencies", typ: u(undefined, a(r("OneWayDependency"))) },
        { json: "mutualDependencies", js: "mutualDependencies", typ: u(undefined, a(a(r("ElementReference")))) },
    ], false),
    "ElementReference": o([
        { json: "name", js: "name", typ: r("MutualDependencyName") },
        { json: "id", js: "id", typ: "" },
        { json: "commandIds", js: "commandIds", typ: u(undefined, a("")) },
    ], false),
    "OneWayDependency": o([
        { json: "element", js: "element", typ: r("ElementReference") },
        { json: "dependsOn", js: "dependsOn", typ: a(r("ElementReference")) },
    ], false),
    "ElementExtension": o([
        { json: "requirements", js: "requirements", typ: u(undefined, r("RequirementsExtensionElement")) },
        { json: "runtimes", js: "runtimes", typ: u(undefined, a(r("ExtensionRuntimesArray"))) },
        { json: "ribbons", js: "ribbons", typ: u(undefined, a(r("ExtensionRibbonsArray"))) },
        { json: "autoRunEvents", js: "autoRunEvents", typ: u(undefined, a(r("ExtensionAutoRunEventsArray"))) },
        { json: "alternates", js: "alternates", typ: u(undefined, a(r("ExtensionAlternateVersionsArray"))) },
        { json: "audienceClaimUrl", js: "audienceClaimUrl", typ: u(undefined, "") },
        { json: "appDeeplinks", js: "appDeeplinks", typ: u(undefined, a(r("ExtensionAppDeeplinksArray"))) },
        { json: "contentRuntimes", js: "contentRuntimes", typ: u(undefined, a(r("ExtensionContentRuntimeArray"))) },
        { json: "getStartedMessages", js: "getStartedMessages", typ: u(undefined, a(r("ExtensionGetStartedMessageArray"))) },
        { json: "contextMenus", js: "contextMenus", typ: u(undefined, a(r("ExtensionContextMenuArray"))) },
        { json: "keyboardShortcuts", js: "keyboardShortcuts", typ: u(undefined, a(r("ExtensionKeyboardShortcut"))) },
    ], false),
    "ExtensionAlternateVersionsArray": o([
        { json: "requirements", js: "requirements", typ: u(undefined, r("RequirementsExtensionElement")) },
        { json: "prefer", js: "prefer", typ: u(undefined, r("Prefer")) },
        { json: "hide", js: "hide", typ: u(undefined, r("Hide")) },
        { json: "alternateIcons", js: "alternateIcons", typ: r("AlternateIcons") },
        { json: "xllCustomFunctions", js: "xllCustomFunctions", typ: u(undefined, r("ExtensionXllCustomFunctions")) },
    ], false),
    "AlternateIcons": o([
        { json: "icon", js: "icon", typ: r("ExtensionCommonIcon") },
        { json: "highResolutionIcon", js: "highResolutionIcon", typ: r("ExtensionCommonIcon") },
    ], false),
    "ExtensionCommonIcon": o([
        { json: "size", js: "size", typ: 3.14 },
        { json: "url", js: "url", typ: "" },
    ], false),
    "Hide": o([
        { json: "storeOfficeAddin", js: "storeOfficeAddin", typ: u(undefined, r("StoreOfficeAddin")) },
        { json: "customOfficeAddin", js: "customOfficeAddin", typ: u(undefined, r("CustomOfficeAddin")) },
    ], "any"),
    "CustomOfficeAddin": o([
        { json: "officeAddinId", js: "officeAddinId", typ: "" },
    ], false),
    "StoreOfficeAddin": o([
        { json: "officeAddinId", js: "officeAddinId", typ: "" },
        { json: "assetId", js: "assetId", typ: "" },
    ], false),
    "Prefer": o([
        { json: "comAddin", js: "comAddin", typ: u(undefined, r("COMAddin")) },
    ], "any"),
    "COMAddin": o([
        { json: "progId", js: "progId", typ: "" },
    ], false),
    "RequirementsExtensionElement": o([
        { json: "capabilities", js: "capabilities", typ: u(undefined, a(r("Capability"))) },
        { json: "scopes", js: "scopes", typ: u(undefined, a(r("RequirementsScope"))) },
        { json: "formFactors", js: "formFactors", typ: u(undefined, a(r("FormFactor"))) },
    ], false),
    "Capability": o([
        { json: "name", js: "name", typ: "" },
        { json: "minVersion", js: "minVersion", typ: u(undefined, "") },
        { json: "maxVersion", js: "maxVersion", typ: u(undefined, "") },
    ], false),
    "ExtensionXllCustomFunctions": o([
        { json: "fileName", js: "fileName", typ: u(undefined, "") },
    ], "any"),
    "ExtensionAppDeeplinksArray": o([
        { json: "requirements", js: "requirements", typ: u(undefined, r("AppDeeplinkRequirements")) },
        { json: "contexts", js: "contexts", typ: a(r("ExtensionContext")) },
        { json: "actionId", js: "actionId", typ: "" },
        { json: "label", js: "label", typ: "" },
        { json: "semanticDescription", js: "semanticDescription", typ: "" },
    ], false),
    "AppDeeplinkRequirements": o([
        { json: "capabilities", js: "capabilities", typ: u(undefined, a(r("Capability"))) },
        { json: "scopes", js: "scopes", typ: u(undefined, a(r("RequirementsScope"))) },
        { json: "formFactors", js: "formFactors", typ: u(undefined, a(r("FormFactor"))) },
    ], false),
    "ExtensionAutoRunEventsArray": o([
        { json: "requirements", js: "requirements", typ: u(undefined, r("RequirementsExtensionElement")) },
        { json: "events", js: "events", typ: a(r("Event")) },
    ], false),
    "Event": o([
        { json: "type", js: "type", typ: "" },
        { json: "actionId", js: "actionId", typ: "" },
        { json: "options", js: "options", typ: u(undefined, r("Options")) },
    ], false),
    "Options": o([
        { json: "sendMode", js: "sendMode", typ: r("SendMode") },
    ], false),
    "ExtensionContentRuntimeArray": o([
        { json: "requirements", js: "requirements", typ: u(undefined, r("ContentRuntimeRequirements")) },
        { json: "id", js: "id", typ: "" },
        { json: "code", js: "code", typ: r("ExtensionRuntimeCode") },
        { json: "requestedHeight", js: "requestedHeight", typ: u(undefined, 3.14) },
        { json: "requestedWidth", js: "requestedWidth", typ: u(undefined, 3.14) },
        { json: "disableSnapshot", js: "disableSnapshot", typ: u(undefined, true) },
    ], false),
    "ExtensionRuntimeCode": o([
        { json: "page", js: "page", typ: "" },
        { json: "script", js: "script", typ: u(undefined, "") },
    ], false),
    "ContentRuntimeRequirements": o([
        { json: "capabilities", js: "capabilities", typ: u(undefined, a(r("Capability"))) },
        { json: "scopes", js: "scopes", typ: u(undefined, a(r("RequirementsScope"))) },
        { json: "formFactors", js: "formFactors", typ: u(undefined, a(r("FormFactor"))) },
    ], false),
    "ExtensionContextMenuArray": o([
        { json: "requirements", js: "requirements", typ: u(undefined, r("ContextMenuRequirements")) },
        { json: "menus", js: "menus", typ: a(r("ExtensionMenuItem")) },
    ], false),
    "ExtensionMenuItem": o([
        { json: "entryPoint", js: "entryPoint", typ: r("EntryPoint") },
        { json: "controls", js: "controls", typ: a(r("ExtensionCommonCustomGroupControlsItem")) },
    ], false),
    "ExtensionCommonCustomGroupControlsItem": o([
        { json: "id", js: "id", typ: "" },
        { json: "type", js: "type", typ: r("PurpleType") },
        { json: "builtInControlId", js: "builtInControlId", typ: u(undefined, "") },
        { json: "label", js: "label", typ: "" },
        { json: "icons", js: "icons", typ: a(r("ExtensionCommonIcon")) },
        { json: "supertip", js: "supertip", typ: r("ExtensionCommonSuperToolTip") },
        { json: "actionId", js: "actionId", typ: u(undefined, "") },
        { json: "overriddenByRibbonApi", js: "overriddenByRibbonApi", typ: u(undefined, true) },
        { json: "enabled", js: "enabled", typ: u(undefined, true) },
        { json: "items", js: "items", typ: u(undefined, a(r("ExtensionCommonCustomControlMenuItem"))) },
    ], false),
    "ExtensionCommonCustomControlMenuItem": o([
        { json: "id", js: "id", typ: "" },
        { json: "type", js: "type", typ: r("ItemType") },
        { json: "label", js: "label", typ: "" },
        { json: "icons", js: "icons", typ: u(undefined, a(r("ExtensionCommonIcon"))) },
        { json: "supertip", js: "supertip", typ: r("ExtensionCommonSuperToolTip") },
        { json: "actionId", js: "actionId", typ: "" },
        { json: "enabled", js: "enabled", typ: u(undefined, true) },
        { json: "overriddenByRibbonApi", js: "overriddenByRibbonApi", typ: u(undefined, true) },
    ], false),
    "ExtensionCommonSuperToolTip": o([
        { json: "title", js: "title", typ: "" },
        { json: "description", js: "description", typ: "" },
    ], false),
    "ContextMenuRequirements": o([
        { json: "capabilities", js: "capabilities", typ: u(undefined, a(r("Capability"))) },
        { json: "scopes", js: "scopes", typ: u(undefined, a(r("RequirementsScope"))) },
        { json: "formFactors", js: "formFactors", typ: u(undefined, a(r("FormFactor"))) },
    ], false),
    "ExtensionGetStartedMessageArray": o([
        { json: "requirements", js: "requirements", typ: u(undefined, r("GetStartedMessageRequirements")) },
        { json: "title", js: "title", typ: "" },
        { json: "description", js: "description", typ: "" },
        { json: "learnMoreUrl", js: "learnMoreUrl", typ: "" },
    ], false),
    "GetStartedMessageRequirements": o([
        { json: "capabilities", js: "capabilities", typ: u(undefined, a(r("Capability"))) },
        { json: "scopes", js: "scopes", typ: u(undefined, a(r("RequirementsScope"))) },
        { json: "formFactors", js: "formFactors", typ: u(undefined, a(r("FormFactor"))) },
    ], false),
    "ExtensionKeyboardShortcut": o([
        { json: "requirements", js: "requirements", typ: u(undefined, r("RequirementsExtensionElement")) },
        { json: "shortcuts", js: "shortcuts", typ: a(r("ExtensionShortcut")) },
    ], "any"),
    "ExtensionShortcut": o([
        { json: "key", js: "key", typ: r("Key") },
        { json: "actionId", js: "actionId", typ: "" },
    ], "any"),
    "Key": o([
        { json: "default", js: "default", typ: "" },
        { json: "mac", js: "mac", typ: u(undefined, "") },
        { json: "web", js: "web", typ: u(undefined, "") },
        { json: "windows", js: "windows", typ: u(undefined, "") },
    ], "any"),
    "ExtensionRibbonsArray": o([
        { json: "requirements", js: "requirements", typ: u(undefined, r("RequirementsExtensionElement")) },
        { json: "contexts", js: "contexts", typ: u(undefined, a(r("ExtensionContext"))) },
        { json: "tabs", js: "tabs", typ: a(r("ExtensionRibbonsArrayTabsItem")) },
        { json: "fixedControls", js: "fixedControls", typ: u(undefined, a(r("ExtensionRibbonsArrayFixedControlItem"))) },
        { json: "spamPreProcessingDialog", js: "spamPreProcessingDialog", typ: u(undefined, r("ExtensionRibbonsSpamPreProcessingDialog")) },
    ], false),
    "ExtensionRibbonsArrayFixedControlItem": o([
        { json: "id", js: "id", typ: "" },
        { json: "type", js: "type", typ: r("FixedControlType") },
        { json: "label", js: "label", typ: "" },
        { json: "icons", js: "icons", typ: a(r("ExtensionCommonIcon")) },
        { json: "supertip", js: "supertip", typ: r("ExtensionCommonSuperToolTip") },
        { json: "actionId", js: "actionId", typ: "" },
        { json: "enabled", js: "enabled", typ: true },
    ], false),
    "ExtensionRibbonsSpamPreProcessingDialog": o([
        { json: "title", js: "title", typ: "" },
        { json: "description", js: "description", typ: "" },
        { json: "spamReportingOptions", js: "spamReportingOptions", typ: u(undefined, r("SpamReportingOptions")) },
        { json: "spamFreeTextSectionTitle", js: "spamFreeTextSectionTitle", typ: u(undefined, "") },
        { json: "spamMoreInfo", js: "spamMoreInfo", typ: u(undefined, r("SpamMoreInfo")) },
    ], false),
    "SpamMoreInfo": o([
        { json: "text", js: "text", typ: "" },
        { json: "url", js: "url", typ: "" },
    ], "any"),
    "SpamReportingOptions": o([
        { json: "title", js: "title", typ: "" },
        { json: "options", js: "options", typ: a("") },
    ], "any"),
    "ExtensionRibbonsArrayTabsItem": o([
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "label", js: "label", typ: u(undefined, "") },
        { json: "position", js: "position", typ: u(undefined, r("Position")) },
        { json: "builtInTabId", js: "builtInTabId", typ: u(undefined, "") },
        { json: "groups", js: "groups", typ: u(undefined, a(r("ExtensionRibbonsCustomTabGroupsItem"))) },
        { json: "customMobileRibbonGroups", js: "customMobileRibbonGroups", typ: u(undefined, a(r("ExtensionRibbonsCustomMobileGroupItem"))) },
    ], false),
    "ExtensionRibbonsCustomMobileGroupItem": o([
        { json: "id", js: "id", typ: "" },
        { json: "label", js: "label", typ: "" },
        { json: "controls", js: "controls", typ: a(r("ExtensionRibbonsCustomMobileControlButtonItem")) },
    ], "any"),
    "ExtensionRibbonsCustomMobileControlButtonItem": o([
        { json: "id", js: "id", typ: "" },
        { json: "type", js: "type", typ: r("FluffyType") },
        { json: "label", js: "label", typ: "" },
        { json: "icons", js: "icons", typ: a(r("ExtensionCustomMobileIcon")) },
        { json: "actionId", js: "actionId", typ: "" },
    ], "any"),
    "ExtensionCustomMobileIcon": o([
        { json: "size", js: "size", typ: 3.14 },
        { json: "url", js: "url", typ: "" },
        { json: "scale", js: "scale", typ: 3.14 },
    ], false),
    "ExtensionRibbonsCustomTabGroupsItem": o([
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "label", js: "label", typ: u(undefined, "") },
        { json: "icons", js: "icons", typ: u(undefined, a(r("ExtensionCommonIcon"))) },
        { json: "controls", js: "controls", typ: u(undefined, a(r("ExtensionCommonCustomGroupControlsItem"))) },
        { json: "builtInGroupId", js: "builtInGroupId", typ: u(undefined, "") },
        { json: "overriddenByRibbonApi", js: "overriddenByRibbonApi", typ: u(undefined, true) },
    ], false),
    "Position": o([
        { json: "builtInTabId", js: "builtInTabId", typ: "" },
        { json: "align", js: "align", typ: r("Align") },
    ], false),
    "ExtensionRuntimesArray": o([
        { json: "requirements", js: "requirements", typ: u(undefined, r("RequirementsExtensionElement")) },
        { json: "id", js: "id", typ: "" },
        { json: "type", js: "type", typ: u(undefined, r("RuntimeType")) },
        { json: "code", js: "code", typ: r("ExtensionRuntimeCode") },
        { json: "lifetime", js: "lifetime", typ: u(undefined, r("Lifetime")) },
        { json: "actions", js: "actions", typ: u(undefined, a(r("ExtensionRuntimesActionsItem"))) },
        { json: "customFunctions", js: "customFunctions", typ: u(undefined, r("ExtensionCustomFunctions")) },
    ], false),
    "ExtensionRuntimesActionsItem": o([
        { json: "id", js: "id", typ: "" },
        { json: "type", js: "type", typ: r("ActionType") },
        { json: "displayName", js: "displayName", typ: u(undefined, "") },
        { json: "pinnable", js: "pinnable", typ: u(undefined, true) },
        { json: "view", js: "view", typ: u(undefined, "") },
        { json: "multiselect", js: "multiselect", typ: u(undefined, true) },
        { json: "supportsNoItemContext", js: "supportsNoItemContext", typ: u(undefined, true) },
    ], false),
    "ExtensionCustomFunctions": o([
        { json: "functions", js: "functions", typ: a(r("ExtensionFunction")) },
        { json: "namespace", js: "namespace", typ: r("ExtensionCustomFunctionsNamespace") },
        { json: "allowCustomDataForDataTypeAny", js: "allowCustomDataForDataTypeAny", typ: u(undefined, true) },
    ], "any"),
    "ExtensionFunction": o([
        { json: "id", js: "id", typ: "" },
        { json: "name", js: "name", typ: "" },
        { json: "description", js: "description", typ: u(undefined, "") },
        { json: "helpUrl", js: "helpUrl", typ: u(undefined, "") },
        { json: "parameters", js: "parameters", typ: a(r("ExtensionFunctionParameter")) },
        { json: "result", js: "result", typ: r("ExtensionResult") },
        { json: "stream", js: "stream", typ: u(undefined, true) },
        { json: "volatile", js: "volatile", typ: u(undefined, true) },
        { json: "cancelable", js: "cancelable", typ: u(undefined, true) },
        { json: "requiresAddress", js: "requiresAddress", typ: u(undefined, true) },
        { json: "requiresParameterAddress", js: "requiresParameterAddress", typ: u(undefined, true) },
    ], "any"),
    "ExtensionFunctionParameter": o([
        { json: "name", js: "name", typ: "" },
        { json: "description", js: "description", typ: u(undefined, "") },
        { json: "type", js: "type", typ: u(undefined, "") },
        { json: "cellValueType", js: "cellValueType", typ: u(undefined, r("CellValueType")) },
        { json: "dimensionality", js: "dimensionality", typ: u(undefined, r("Dimensionality")) },
        { json: "optional", js: "optional", typ: u(undefined, true) },
        { json: "repeating", js: "repeating", typ: u(undefined, true) },
    ], "any"),
    "ExtensionResult": o([
        { json: "dimensionality", js: "dimensionality", typ: u(undefined, r("Dimensionality")) },
    ], "any"),
    "ExtensionCustomFunctionsNamespace": o([
        { json: "id", js: "id", typ: "" },
        { json: "name", js: "name", typ: "" },
    ], "any"),
    "GraphConnector": o([
        { json: "notificationUrl", js: "notificationUrl", typ: "" },
    ], false),
    "Icons": o([
        { json: "outline", js: "outline", typ: "" },
        { json: "color", js: "color", typ: "" },
        { json: "color32x32", js: "color32x32", typ: u(undefined, "") },
    ], false),
    "IntuneInfo": o([
        { json: "supportedMobileAppManagementVersion", js: "supportedMobileAppManagementVersion", typ: u(undefined, "") },
    ], false),
    "LocalizationInfo": o([
        { json: "defaultLanguageTag", js: "defaultLanguageTag", typ: "" },
        { json: "defaultLanguageFile", js: "defaultLanguageFile", typ: u(undefined, "") },
        { json: "additionalLanguages", js: "additionalLanguages", typ: u(undefined, a(r("AdditionalLanguage"))) },
    ], false),
    "AdditionalLanguage": o([
        { json: "languageTag", js: "languageTag", typ: "" },
        { json: "file", js: "file", typ: "" },
    ], false),
    "MeetingExtensionDefinition": o([
        { json: "scenes", js: "scenes", typ: u(undefined, a(r("Scene"))) },
        { json: "supportsCustomShareToStage", js: "supportsCustomShareToStage", typ: u(undefined, true) },
        { json: "videoFilters", js: "videoFilters", typ: u(undefined, a(r("VideoFilter"))) },
        { json: "videoFiltersConfigurationUrl", js: "videoFiltersConfigurationUrl", typ: u(undefined, "") },
        { json: "supportsStreaming", js: "supportsStreaming", typ: u(undefined, true) },
        { json: "supportsAnonymousGuestUsers", js: "supportsAnonymousGuestUsers", typ: u(undefined, true) },
    ], false),
    "Scene": o([
        { json: "id", js: "id", typ: "" },
        { json: "name", js: "name", typ: "" },
        { json: "file", js: "file", typ: "" },
        { json: "preview", js: "preview", typ: "" },
        { json: "maxAudience", js: "maxAudience", typ: 0 },
        { json: "seatsReservedForOrganizersOrPresenters", js: "seatsReservedForOrganizersOrPresenters", typ: 0 },
    ], false),
    "VideoFilter": o([
        { json: "id", js: "id", typ: "" },
        { json: "name", js: "name", typ: "" },
        { json: "thumbnail", js: "thumbnail", typ: "" },
    ], false),
    "NameClass": o([
        { json: "short", js: "short", typ: "" },
        { json: "full", js: "full", typ: "" },
        { json: "abbreviated", js: "abbreviated", typ: u(undefined, "") },
    ], false),
    "ScopeConstraints": o([
        { json: "teams", js: "teams", typ: u(undefined, a(r("TeamElement"))) },
        { json: "groupChats", js: "groupChats", typ: u(undefined, a(r("GroupChatElement"))) },
    ], false),
    "GroupChatElement": o([
        { json: "id", js: "id", typ: "" },
    ], false),
    "TeamElement": o([
        { json: "id", js: "id", typ: "" },
    ], false),
    "StaticTab": o([
        { json: "entityId", js: "entityId", typ: "" },
        { json: "name", js: "name", typ: u(undefined, "") },
        { json: "contentUrl", js: "contentUrl", typ: u(undefined, "") },
        { json: "contentBotId", js: "contentBotId", typ: u(undefined, "") },
        { json: "websiteUrl", js: "websiteUrl", typ: u(undefined, "") },
        { json: "searchUrl", js: "searchUrl", typ: u(undefined, "") },
        { json: "scopes", js: "scopes", typ: a(r("StaticTabScope")) },
        { json: "context", js: "context", typ: u(undefined, a(r("StaticTabContext"))) },
        { json: "supportedPlatform", js: "supportedPlatform", typ: u(undefined, a(r("SupportedPlatform"))) },
        { json: "requirementSet", js: "requirementSet", typ: u(undefined, r("ElementRequirementSet")) },
    ], false),
    "SubscriptionOffer": o([
        { json: "offerId", js: "offerId", typ: "" },
    ], false),
    "WebApplicationInfo": o([
        { json: "id", js: "id", typ: "" },
        { json: "resource", js: "resource", typ: u(undefined, "") },
        { json: "nestedAppAuthInfo", js: "nestedAppAuthInfo", typ: u(undefined, a(r("NestedAppAuthInfo"))) },
    ], false),
    "NestedAppAuthInfo": o([
        { json: "redirectUri", js: "redirectUri", typ: "" },
        { json: "scopes", js: "scopes", typ: a("") },
        { json: "claims", js: "claims", typ: u(undefined, "") },
    ], false),
    "DialogType": [
        "adaptiveCard",
        "url",
    ],
    "HandlerType": [
        "invokeAPI",
        "invokeBot",
        "openDialog",
        "openPage",
        "openTaskpane",
        "openURL",
    ],
    "Intent": [
        "addTo",
        "create",
        "custom",
        "open",
        "preview",
        "share",
        "sign",
    ],
    "ResourceSpecificType": [
        "Application",
        "Delegated",
    ],
    "CommandListScope": [
        "copilot",
        "groupChat",
        "personal",
        "team",
    ],
    "HostMustSupportFunctionalityName": [
        "dialogAdaptiveCard",
        "dialogAdaptiveCardBot",
        "dialogUrl",
        "dialogUrlBot",
    ],
    "AuthType": [
        "apiSecretServiceAuth",
        "microsoftEntra",
        "none",
        "oAuth2.0",
    ],
    "CommandContext": [
        "commandBox",
        "compose",
        "message",
    ],
    "InputType": [
        "choiceset",
        "date",
        "number",
        "text",
        "textarea",
        "time",
        "toggle",
    ],
    "CommandType": [
        "action",
        "query",
    ],
    "ComposeExtensionType": [
        "apiBased",
        "botBased",
    ],
    "MessageHandlerType": [
        "link",
    ],
    "ConfigurableProperty": [
        "accentColor",
        "developerUrl",
        "largeImageUrl",
        "longDescription",
        "name",
        "privacyUrl",
        "shortDescription",
        "smallImageUrl",
        "termsOfUseUrl",
    ],
    "ConfigurableTabContext": [
        "callingSidePanel",
        "channelTab",
        "meetingChatTab",
        "meetingDetailsTab",
        "meetingSidePanel",
        "meetingStage",
        "personalTab",
        "privateChatTab",
    ],
    "MeetingSurface": [
        "sidePanel",
        "stage",
    ],
    "ConfigurableTabScope": [
        "groupChat",
        "team",
    ],
    "SupportedPlatform": [
        "desktop",
        "mobile",
        "teamsMeetingDevices",
    ],
    "SupportedSharePointHost": [
        "sharePointFullPage",
        "sharePointWebPart",
    ],
    "ConnectorScope": [
        "team",
    ],
    "SourceTypeEnum": [
        "bot",
    ],
    "DefaultSize": [
        "large",
        "medium",
    ],
    "Groupchat": [
        "bot",
        "connector",
        "tab",
    ],
    "DefaultInstallScope": [
        "copilot",
        "groupChat",
        "meetings",
        "personal",
        "team",
    ],
    "DevicePermission": [
        "geolocation",
        "midi",
        "media",
        "notifications",
        "openExternal",
    ],
    "MutualDependencyName": [
        "bots",
        "composeExtensions",
        "configurableTabs",
        "staticTabs",
    ],
    "FormFactor": [
        "desktop",
        "mobile",
    ],
    "RequirementsScope": [
        "document",
        "mail",
        "presentation",
        "workbook",
    ],
    "ExtensionContext": [
        "default",
        "logEventMeetingDetailsAttendee",
        "mailCompose",
        "mailRead",
        "meetingDetailsAttendee",
        "meetingDetailsOrganizer",
        "onlineMeetingDetailsOrganizer",
        "spamReportingOverride",
    ],
    "SendMode": [
        "block",
        "promptUser",
        "softBlock",
    ],
    "ItemType": [
        "menuItem",
    ],
    "PurpleType": [
        "button",
        "menu",
    ],
    "EntryPoint": [
        "cell",
        "text",
    ],
    "FixedControlType": [
        "button",
    ],
    "FluffyType": [
        "mobileButton",
    ],
    "Align": [
        "after",
        "before",
    ],
    "ActionType": [
        "executeDataFunction",
        "executeFunction",
        "openPage",
    ],
    "CellValueType": [
        "booleancellvalue",
        "cellvalue",
        "doublecellvalue",
        "entitycellvalue",
        "errorcellvalue",
        "formattednumbercellvalue",
        "linkedentitycellvalue",
        "localimagecellvalue",
        "stringcellvalue",
        "webimagecellvalue",
    ],
    "Dimensionality": [
        "matrix",
        "scalar",
    ],
    "Lifetime": [
        "long",
        "short",
    ],
    "RuntimeType": [
        "general",
    ],
    "ManifestVersion": [
        "devPreview",
        "m365DevPreview",
    ],
    "Permission": [
        "identity",
        "messageTeamMembers",
    ],
    "StaticTabContext": [
        "channelTab",
        "meetingChatTab",
        "meetingDetailsTab",
        "meetingSidePanel",
        "meetingStage",
        "personalTab",
        "privateChatTab",
        "teamLevelApp",
    ],
    "StaticTabScope": [
        "groupChat",
        "personal",
        "team",
    ],
    "SupportedChannelType": [
        "privateChannels",
        "sharedChannels",
    ],
};
//# sourceMappingURL=TeamsManifestVDevPreview.js.map